import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from tokens import BOT_TOKEN, WEB_APP_URL
import asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command(commands=['start']))
async def send_welcome(message: types.Message):
    keyboard = InlineKeyboardBuilder()
    user = message.from_user
    web_app_url_with_params = f"{WEB_APP_URL}?user_id={user.id}&first_name={user.first_name}&last_name={user.last_name}&username={user.username}"
    web_app_button = InlineKeyboardButton(text="–ó–∞–ø—É—Å—Ç–∏—Ç—å Crypto Checkerüìà", web_app=types.WebAppInfo(url=web_app_url_with_params))
    keyboard.add(web_app_button)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í Crypto Checker –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Çüí≤ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–≤–æ–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—èüíº.", reply_markup=keyboard.as_markup())

async def main():
    # –ü—Ä–æ–ø—É—Å–∫–∞—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞
    await dp.start_polling(bot, skip_updates=True)

if __name__ == '__main__':
    asyncio.run(main())